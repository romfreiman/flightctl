// Package v1alpha1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.3.0 DO NOT EDIT.
package v1alpha1

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"7xZdf7j+/wEAAP//EnHPPTLiAQA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
